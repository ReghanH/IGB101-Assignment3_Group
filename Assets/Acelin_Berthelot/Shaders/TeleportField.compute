// ------------------------------------------------------------
// Teleport-like cylindrical vector field for Particle  Force-Field
// R,G,B = direction (encoded 0‒1),  A = magnitude 0‒1
// ------------------------------------------------------------
#pragma kernel TeleportField

RWTexture3D<float4> Result; // RGBAHalf or RGBA32
uint3 FieldSize; // (width,height,depth)
float Radius = 0.4; // inner cylinder radius (0-0.5)
float Falloff = 0.15; // edge softness
float SwirlStrength = 1.2; // >0 : CCW swirl, <0 : CW

// simple remap helpers
float remap01(float v)
{
    return v * 0.5 + 0.5;
}
float3 remap01(float3 v)
{
    return v * 0.5 + 0.5;
}

[numthreads(8, 8, 8)]
void TeleportField(uint3 id : SV_DispatchThreadID)
{
    if (any(id >= FieldSize))
        return;

    float3 size = FieldSize - 1;
    float3 p = (id / size) * 2.0 - 1.0; // cube –1 … +1
    float2 pXZ = p.xz;

    float r = length(pXZ); // radial distance in XZ
    float cylMask = smoothstep(Radius + Falloff, Radius, r); // 1 inside, 0 outside

    // base flow: upward along +Y
    float3 dir = float3(0, 1, 0);

    // add azimuthal swirl (rotate around Y axis)
    if (r > 1e-4)
    {
        float2 tangent = float2(-p.z, p.x) / r; // perpendicular in XZ plane
        dir.xz += tangent * SwirlStrength;
    }

    dir = normalize(dir); // keep it unit length
    float magnitude = cylMask; // fade outside cylinder

    // encode to 0-1 in RGB, keep magnitude in A
    Result[id] = float4(remap01(dir), magnitude);
}
